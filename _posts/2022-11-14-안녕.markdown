---
layout: post
title: 구글 블로그에 x min read 구현하기
categories: ['구글블로그']
---
개발 관련 블로그를 살펴보면 읽는 데 걸리는 시간을 적어 두는 경우가 있다. '3 min read'처럼 말이다. 글을 읽는 데 3분이 걸린다는 소리다. 이러한 소요 시간은 어떻게 구하는 것일까?

방법은 생각보다 간단하다. 본문이 가진 단어의 개수를 보통 사람이 1분당 읽는 단어의 개수로 나누고 반올림하면 된다. 평균 읽기 속도가 1분 당 약 200 단어이므로, 632개의 단어가 있는 글이라면 3 min read가 된다.

이런 기능을 구현한 사이트는 대부분 구글 블로그가 아니었다. 정확히는 몰라도 아마 워드프레스가 아니였을까? 다들 커스텀 도메인을 쓰고 있어서 무슨 블로그인지 모르겠다. 아무튼 나는 구글 블로그를 하고 있으니, 구글 블로그에 x min read를 구현하는 방법에 대해 알아보자.

구글 블로그에 어떤 기능을 만들 때는 서버에서 작업을 수행하거나 브라우저에서 작업을 수행한다. 

서버에서 html을 전달할 때부터 시간을 계산한 채로 나오면 좋겠지만, 이는 불가능한 것으로 알고 있다. 본문에 해당하는 데이터 태그는 `<data:post.body/>`인데, 구글 블로그가 이 태그에 대하여 단어 수를 세는 연산자를 제공하지 않기 때문이다.

서버에서 처리할 수 없으니 브라우저에서 작동하는 자바스크립트를 이용해야 한다. 자바스크립트를 이용해서 구글 블로그에 x min read를 추가하는 방법은 다음과 같다.

## x min read를 표시할 곳 만들기
테마 XML 파일을 열고 제목 밑에 x min read가 들어갈 공간을 만든다. 테마마다 그 위치가 다른데, 나 같은 경우에는 Blog 위젯 아래 post-header-line-1 이라는 클래스를 가진 div 요소의 자식으로 넣어주었다. 자바스크립트로 선택할 수 있게 id 속성 또한 넣어준다.

{% highlight html %}
<span id="post-rdtime"></span>
{% endhighlight %}

## 자바스크립트 작성하기
아까 말했듯이 본문의 단어 수를 세는 스크립트를 작성하면 된다. 근데 이 과정은 생각보다 복잡하다. 왜냐하면, 본문은 일반 텍스트가 아니라 태그가 포함된 HTML이기 때문이다. 태그는 눈에 보이지 않으므로 단어 수 계산에서 빼야 한다. 이 점을 고려해서 코드를 작성해 보자.

내 블로그의 본문은 post-body라는 클래스를 가진 div 요소 안에 있다. 그 안에 문단을 나타내는 p와 사진을 나타내는 img 등이 나열되어 있다. 이러한 div 요소 바로 밑의 자식 요소를 가져오는 속성은 Element.childNodes다. Element.childNodes에는 일반 텍스트와 HTML 요소가 모두 포함된다. 태그를 제외해야 하므로 우리는 일반 텍스트만 취하고 HTML 요소는 버린다.

근데 그 HTML 요소 안에도 자식 요소가 있어서 그 안에 텍스트가 포함될 수도 있다. 따라서 HTML 트리를 탐색하면서 텍스트를 모조리 찾는 코드를 만들어야 한다. 한 요소 안에 있는 텍스트를 전부 반환하는 함수를 다음과 같이 만들어 보았다.

{% highlight javascript %}
function getText(el) {
    var text = '';
    for (var i = 0; i < el.childNodes.length; i++) {
        var child = el.childNodes[i];
        if (child.nodeType == 1) {
            getText(child);
        } else {
            text += child.nodeValue;
        }
    }
    return text;
}
{% endhighlight %}

`data:view.isSingleItem`이 true일 때만 필요하니 `<b:if>` 태그로 묶어주는 게 좋다.


브라우저는 HTML 파일을 렌더링할 때 위에서 아래 방향으로 읽어 나간다. 따라서 x min read를 계산하는 스크립트를 `</body>` 바로 전과 같이 맨 밑에 넣으면 브라우저가 이를 맨 마지막에 처리하여 x min read가 바로 표시되지 않는다는 문제가 생긴다. 그래서 스크립트를 `</head>` 전에 삽입해야 한다.

그런가 하면 코드와 수식은 일반적인 속도로 읽히지 않는다. 

